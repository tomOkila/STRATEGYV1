// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using STRATEGY.WEBAPI.Data;

#nullable disable

namespace STRATEGY.WEBAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251017094003_AddAdditionalRolesAndPermissions")]
    partial class AddAdditionalRolesAndPermissions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("STRATEGY.CLIENT.Models.AppRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(4182),
                            RoleName = "Admin",
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(4183)
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(4186),
                            RoleName = "User",
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(4186)
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(4188),
                            RoleName = "Visitor",
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(4189)
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(4190),
                            RoleName = "Team",
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(4191)
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(4193),
                            RoleName = "Pteam",
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(4194)
                        });
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.AppUsers", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentManager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            CreateDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(4232),
                            DepartmentManager = "Head IT",
                            DepartmentName = "IT Department",
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(4233)
                        });
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.DetailedSO", b =>
                {
                    b.Property<int>("DetailedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailedId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailedScorerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailedTargetHistory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailedTargetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SOId")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DetailedId");

                    b.HasIndex("SOId");

                    b.ToTable("DetailedSO");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.Permissions", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"));

                    b.Property<bool>("Create")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Delete")
                        .HasColumnType("bit");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Update")
                        .HasColumnType("bit");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            PermissionId = 1,
                            Create = true,
                            CreateDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(3971),
                            Delete = true,
                            PermissionName = "Admin",
                            Update = true,
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(3988)
                        },
                        new
                        {
                            PermissionId = 2,
                            Create = false,
                            CreateDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(3991),
                            Delete = false,
                            PermissionName = "User",
                            Update = false,
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(3992)
                        },
                        new
                        {
                            PermissionId = 3,
                            Create = false,
                            CreateDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(3994),
                            Delete = false,
                            PermissionName = "Visitor",
                            Update = false,
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(3994)
                        },
                        new
                        {
                            PermissionId = 4,
                            Create = true,
                            CreateDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(3996),
                            Delete = false,
                            PermissionName = "Team",
                            Update = true,
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(3997)
                        },
                        new
                        {
                            PermissionId = 5,
                            Create = true,
                            CreateDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(3999),
                            Delete = false,
                            PermissionName = "Pteam",
                            Update = true,
                            UpdatedBy = 0,
                            UpdatedDate = new DateTime(2025, 10, 17, 12, 40, 2, 128, DateTimeKind.Local).AddTicks(4000)
                        });
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.Pillar", b =>
                {
                    b.Property<int>("PillarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PillarID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PillarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PillarRecorder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PillarID");

                    b.ToTable("Pillars");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.Plan", b =>
                {
                    b.Property<int>("PlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanID"));

                    b.Property<string>("ActImpSteps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ActualCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ActualPerformance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("DetailedId")
                        .HasColumnType("int");

                    b.Property<string>("EntityResponsible")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EstimatedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Evidence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExeActivityAnalysis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImpStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InitiativeStatus")
                        .HasColumnType("int");

                    b.Property<string>("KeyPerfIndicatorsEvaluation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartParties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PillarID")
                        .HasColumnType("int");

                    b.Property<int>("ProgramScheduleId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProposedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SOId")
                        .HasColumnType("int");

                    b.Property<string>("SectionComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StraKeyPerfIndicators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorReview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Targeted")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Witness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WitnessDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlanID");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.PlanDocuments", b =>
                {
                    b.Property<int>("PlanDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanDocumentId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanID")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PlanDocumentId");

                    b.HasIndex("PlanID");

                    b.ToTable("PlanDocuments");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.ProgramSchedule", b =>
                {
                    b.Property<int>("ProgramScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramScheduleId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DetailedId")
                        .HasColumnType("int");

                    b.Property<string>("ProgramRegistrarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProgramScheduleId");

                    b.HasIndex("DetailedId");

                    b.ToTable("ProgramSchedules");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.StrategicObjective", b =>
                {
                    b.Property<int>("SOId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SOId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GoalScoreDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoalScorerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PillarId")
                        .HasColumnType("int");

                    b.Property<string>("TargetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SOId");

                    b.HasIndex("PillarId");

                    b.ToTable("StrategicObjectives");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.StrategicPlan", b =>
                {
                    b.Property<int>("StrategicPlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StrategicPlanID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DetailedId")
                        .HasColumnType("int");

                    b.Property<int>("PillarID")
                        .HasColumnType("int");

                    b.Property<int>("ProgramScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("SOId")
                        .HasColumnType("int");

                    b.Property<string>("StrategicPlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StrategicPlanID");

                    b.ToTable("StrategicPlans");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.UserRoles", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.DetailedSO", b =>
                {
                    b.HasOne("STRATEGY.CLIENT.Models.StrategicObjective", "StrategicObjective")
                        .WithMany()
                        .HasForeignKey("SOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StrategicObjective");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.Employee", b =>
                {
                    b.HasOne("STRATEGY.CLIENT.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.PlanDocuments", b =>
                {
                    b.HasOne("STRATEGY.CLIENT.Models.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.ProgramSchedule", b =>
                {
                    b.HasOne("STRATEGY.CLIENT.Models.DetailedSO", "DetailedSO")
                        .WithMany()
                        .HasForeignKey("DetailedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetailedSO");
                });

            modelBuilder.Entity("STRATEGY.CLIENT.Models.StrategicObjective", b =>
                {
                    b.HasOne("STRATEGY.CLIENT.Models.Pillar", "Pillars")
                        .WithMany()
                        .HasForeignKey("PillarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pillars");
                });
#pragma warning restore 612, 618
        }
    }
}
